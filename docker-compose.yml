version: '3'
services:
  flask:
    build: ./flask
    image: flask
    restart: always
    labels:
      # Expose container to Traefik
      - "traefik.enable=true"

      # Configure the route
      - "traefik.http.routers.flask.rule=Host(`plant.lauszus.com`)"
      # - "traefik.http.routers.flask.rule=Host(`plant.docker.localhost`)"
      - "traefik.http.routers.flask.entrypoints=websecure"
      - "traefik.http.routers.flask.tls=true"
      - "traefik.http.routers.flask.tls.certresolver=leresolver"
    volumes:
      - "./flask/app/update:/flask/app/update"
  mqtt:
    image: eclipse-mosquitto
    restart: always
    labels:
      # Expose container to Traefik
      - "traefik.enable=true"

      # Configure the the insecure MQTT route
      - "traefik.tcp.routers.mqtt.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mqtt.entrypoints=mqtt"

      # Configure the the secure MQTT route
      - "traefik.tcp.routers.mqtt-secure.rule=HostSNI(`plant.lauszus.com`)"
      - "traefik.tcp.routers.mqtt-secure.entrypoints=mqtt-secure"
      - "traefik.tcp.routers.mqtt-secure.tls=true"
      - "traefik.tcp.routers.mqtt-secure.tls.certresolver=leresolver"
      - "traefik.tcp.routers.mqtt-secure.service=mqtt-secure"
      - "traefik.tcp.services.mqtt-secure.loadbalancer.server.port=1883"
    volumes:
      # sudo touch ./mosquitto/log/mosquitto.log
      # sudo chmod o+w ./mosquitto/log/mosquitto.log
      # sudo chown -R 1883:1883 ./mosquitto
      - "./mosquitto:/mosquitto:ro"
      - "./mosquitto/data:/mosquitto/data"
      - "./mosquitto/log:/mosquitto/log"
      - "/etc/localtime:/etc/localtime:ro"
  traefik:
    image: traefik:v2.1
    restart: always
    command:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.mqtt.address=:1883"
      - "--entrypoints.mqtt-secure.address=:8883"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--api.dashboard=true"
      - "--certificatesresolvers.leresolver.acme.email=lauszus@gmail.com"
      - "--certificatesresolvers.leresolver.acme.storage=/etc/traefik/acme/acme.json"
      - "--certificatesresolvers.leresolver.acme.httpChallenge=true"
      - "--certificatesresolvers.leresolver.acme.httpChallenge.entrypoint=web"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik:/etc/traefik:ro"
      - "./traefik/acme:/etc/traefik/acme"
    ports:
     - "80:80"
     - "443:443"
     - "1883:1883"
     - "8883:8883"
    labels:
      # Expose container to Traefik
      - "traefik.enable=true"

      # Dashboard
      - "traefik.http.routers.traefik.rule=Host(`plant.lauszus.com`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      # - "traefik.http.routers.traefik.rule=Host(`traefik.docker.localhost`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=leresolver"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=authtraefik"
      - "traefik.http.middlewares.authtraefik.basicauth.usersfile=/etc/traefik/usersfile"

      # Global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"

      # Middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
